{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Matrix input class\n   */\n  Craft.MatrixInput = Garnish.Base.extend(\n    {\n      id: null,\n      blockTypes: null,\n      blockTypesByHandle: null,\n      inputNamePrefix: null,\n      inputIdPrefix: null,\n\n      showingAddBlockMenu: false,\n      addBlockBtnGroupWidth: null,\n      addBlockBtnContainerWidth: null,\n\n      $container: null,\n      $form: null,\n      $blockContainer: null,\n      $addBlockBtnContainer: null,\n      $addBlockBtnGroup: null,\n      $addBlockBtnGroupBtns: null,\n      $statusMessage: null,\n\n      blockSort: null,\n      blockSelect: null,\n      totalNewBlocks: 0,\n\n      init: function (id, blockTypes, inputNamePrefix, settings) {\n        this.id = id;\n        this.blockTypes = blockTypes;\n        this.inputNamePrefix = inputNamePrefix;\n        this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n        // see if settings was actually set to the maxBlocks value\n        if (typeof settings === 'number') {\n          settings = {maxBlocks: settings};\n        }\n        this.setSettings(settings, Craft.MatrixInput.defaults);\n\n        this.$container = $('#' + this.id);\n        this.$form = this.$container.closest('form');\n        this.$blockContainer = this.$container.children('.blocks');\n        this.$addBlockBtnContainer = this.$container.children('.buttons');\n        this.$addBlockBtnGroup =\n          this.$addBlockBtnContainer.children('.btngroup');\n        this.$addBlockBtnGroupBtns = this.$addBlockBtnGroup.children('.btn');\n        this.$addBlockMenuBtn = this.$addBlockBtnContainer.children('.menubtn');\n        this.$statusMessage = this.$container.find('[data-status-message]');\n\n        this.$container.data('matrix', this);\n\n        this.setNewBlockBtn();\n\n        this.blockTypesByHandle = {};\n\n        var i;\n\n        for (i = 0; i < this.blockTypes.length; i++) {\n          var blockType = this.blockTypes[i];\n          this.blockTypesByHandle[blockType.handle] = blockType;\n        }\n\n        var $blocks = this.$blockContainer.children(),\n          collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n        this.blockSort = new Garnish.DragSort($blocks, {\n          handle: '> .actions > .move',\n          axis: 'y',\n          filter: () => {\n            // Only return all the selected items if the target item is selected\n            if (this.blockSort.$targetItem.hasClass('sel')) {\n              return this.blockSelect.getSelectedItems();\n            } else {\n              return this.blockSort.$targetItem;\n            }\n          },\n          collapseDraggees: true,\n          magnetStrength: 4,\n          helperLagBase: 1.5,\n          helperOpacity: 0.9,\n          onDragStop: () => {\n            this.trigger('blockSortDragStop');\n          },\n          onSortChange: () => {\n            this.blockSelect.resetItemOrder();\n          },\n        });\n\n        this.blockSelect = new Garnish.Select(this.$blockContainer, $blocks, {\n          multi: true,\n          vertical: true,\n          handle: '> .checkbox, > .titlebar',\n          checkboxMode: true,\n        });\n\n        for (i = 0; i < $blocks.length; i++) {\n          var $block = $($blocks[i]),\n            blockId = $block.data('id');\n\n          // Is this a new block?\n          var newMatch =\n            typeof blockId === 'string' && blockId.match(/new(\\d+)/);\n\n          if (newMatch && newMatch[1] > this.totalNewBlocks) {\n            this.totalNewBlocks = parseInt(newMatch[1]);\n          }\n\n          var block = new MatrixBlock(this, $block);\n\n          if (block.id && $.inArray('' + block.id, collapsedBlocks) !== -1) {\n            block.collapse();\n          }\n        }\n\n        this.addListener(this.$addBlockBtnGroupBtns, 'click', function (ev) {\n          var type = $(ev.target).data('type');\n          this.addBlock(type);\n        });\n\n        if (this.$addBlockMenuBtn.length) {\n          this.$addBlockMenuBtn.menubtn();\n          this.$addBlockMenuBtn.data('menubtn').on('optionSelect', (ev) => {\n            this.addBlock($(ev.option).data('type'));\n          });\n        }\n\n        this.updateAddBlockBtn();\n\n        this.addListener(this.$container, 'resize', 'setNewBlockBtn');\n        Garnish.$doc.ready(this.setNewBlockBtn.bind(this));\n\n        this.trigger('afterInit');\n      },\n\n      setNewBlockBtn: function () {\n        // Do we know what the button group width is yet?\n        if (!this.addBlockBtnGroupWidth) {\n          this.addBlockBtnGroupWidth = this.$addBlockBtnGroup.width();\n\n          if (!this.addBlockBtnGroupWidth) {\n            return;\n          }\n        }\n\n        // Only check if the container width has resized\n        if (\n          this.addBlockBtnContainerWidth !==\n          (this.addBlockBtnContainerWidth = this.$addBlockBtnContainer.width())\n        ) {\n          if (this.addBlockBtnGroupWidth > this.addBlockBtnContainerWidth) {\n            if (!this.showingAddBlockMenu) {\n              this.$addBlockBtnGroup.addClass('hidden');\n              this.$addBlockMenuBtn.removeClass('hidden');\n              this.showingAddBlockMenu = true;\n            }\n          } else {\n            if (this.showingAddBlockMenu) {\n              this.$addBlockMenuBtn.addClass('hidden');\n              this.$addBlockBtnGroup.removeClass('hidden');\n              this.showingAddBlockMenu = false;\n\n              // Because Safari is awesome\n              if (navigator.userAgent.indexOf('Safari') !== -1) {\n                Garnish.requestAnimationFrame(() => {\n                  this.$addBlockBtnGroup.css('opacity', 0.99);\n\n                  Garnish.requestAnimationFrame(() => {\n                    this.$addBlockBtnGroup.css('opacity', '');\n                  });\n                });\n              }\n            }\n          }\n        }\n      },\n\n      canAddMoreBlocks: function () {\n        return (\n          !this.maxBlocks ||\n          this.$blockContainer.children().length < this.maxBlocks\n        );\n      },\n\n      updateAddBlockBtn: function () {\n        var i, block;\n\n        if (this.canAddMoreBlocks()) {\n          this.$addBlockBtnGroup.removeClass('disabled');\n          this.$addBlockMenuBtn.removeClass('disabled');\n\n          this.$addBlockBtnGroupBtns.each(function () {\n            $(this).removeAttr('aria-disabled');\n          });\n\n          for (i = 0; i < this.blockSelect.$items.length; i++) {\n            block = this.blockSelect.$items.eq(i).data('block');\n\n            if (block) {\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .removeClass('disabled');\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .removeAttr('aria-disabled');\n            }\n          }\n        } else {\n          this.$addBlockBtnGroup.addClass('disabled');\n          this.$addBlockMenuBtn.addClass('disabled');\n\n          this.$addBlockBtnGroupBtns.each(function () {\n            $(this).attr('aria-disabled', 'true');\n          });\n\n          for (i = 0; i < this.blockSelect.$items.length; i++) {\n            block = this.blockSelect.$items.eq(i).data('block');\n\n            if (block) {\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .addClass('disabled');\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .attr('aria-disabled', 'true');\n            }\n          }\n        }\n      },\n\n      updateStatusMessage: function () {\n        this.$statusMessage.empty();\n        let message;\n\n        if (!this.canAddMoreBlocks()) {\n          message = Craft.t(\n            'app',\n            'Matrix block could not be added. Maximum number of blocks reached.'\n          );\n        }\n\n        setTimeout(() => {\n          this.$statusMessage.text(message);\n        }, 250);\n      },\n\n      addBlock: function (type, $insertBefore, autofocus) {\n        if (!this.canAddMoreBlocks()) {\n          this.updateStatusMessage();\n          return;\n        }\n\n        this.totalNewBlocks++;\n\n        const id = `new${this.totalNewBlocks}`;\n        const typeName = this.blockTypesByHandle[type].name;\n        const actionMenuId = `matrixblock-action-menu-${id}`;\n\n        var html = `\n                <div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\" data-type-name=\"${typeName}\" role=\"listitem\">\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[sortOrder][]\" value=\"${id}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[blocks][${id}][type]\" value=\"${type}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[blocks][${id}][enabled]\" value=\"1\"/>\n                  <div class=\"titlebar\">\n                    <div class=\"blocktype\">${\n                      this.getBlockTypeByHandle(type).name\n                    }</div>\n                    <div class=\"preview\"></div>\n                  </div>\n                  <div class=\"checkbox\" title=\"${Craft.t(\n                    'app',\n                    'Select'\n                  )}\"></div>\n                  <div class=\"actions\">\n                    <div class=\"status off\" title=\"${Craft.t(\n                      'app',\n                      'Disabled'\n                    )}\"></div>\n                    <div>\n                      <button type=\"button\" class=\"btn settings icon menubtn\" title=\"${Craft.t(\n                        'app',\n                        'Actions'\n                      )}\" aria-controls=\"${actionMenuId}\" data-disclosure-trigger></button>\n                        <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\">\n                         <ul class=\"padded\">\n                            <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Collapse'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Collapse'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Expand'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Expand'\n        )}</a></li>\n                            <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Disable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Disable'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Enable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Enable'\n        )}</a></li>\n                            <li><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move up'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move up'\n        )}</a></li>\n                            <li><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move down'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move down'\n        )}</a></li>\n                          </ul>`;\n\n        if (!this.settings.staticBlocks) {\n          html += `\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">\n                            <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Delete'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n            'app',\n            'Delete'\n          )}</a></li>\n                          </ul>\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">`;\n\n          for (var i = 0; i < this.blockTypes.length; i++) {\n            var blockType = this.blockTypes[i];\n            html += `\n                            <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${\n                              blockType.handle\n                            }\" href=\"#\" aria-label=\"${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: blockType.name}\n            )}\" type=\"button\" role=\"button\">${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: blockType.name}\n            )}</a></li>`;\n          }\n\n          html += `\n                          </ul>`;\n        }\n\n        html += `\n                        </div>\n                      </div>\n                    <a class=\"move icon\" title=\"${Craft.t(\n                      'app',\n                      'Reorder'\n                    )}\" role=\"button\"></a>\n                  </div>\n                </div>`;\n\n        var $block = $(html);\n\n        // Pause the draft editor\n        const elementEditor = this.$form.data('elementEditor');\n        if (elementEditor) {\n          elementEditor.pause();\n        }\n\n        if ($insertBefore) {\n          $block.insertBefore($insertBefore);\n        } else {\n          $block.appendTo(this.$blockContainer);\n        }\n\n        var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($block),\n          bodyHtml = this.getParsedBlockHtml(\n            this.blockTypesByHandle[type].bodyHtml,\n            id\n          ),\n          js = this.getParsedBlockHtml(this.blockTypesByHandle[type].js, id);\n\n        $(bodyHtml).appendTo($fieldsContainer);\n\n        this.trigger('blockAdded', {\n          $block: $block,\n        });\n\n        // Animate the block into position\n        $block.css(this.getHiddenBlockCss($block)).velocity(\n          {\n            opacity: 1,\n            'margin-bottom': 10,\n          },\n          'fast',\n          () => {\n            $block.css('margin-bottom', '');\n            Garnish.$bod.append(js);\n            Craft.initUiElements($fieldsContainer);\n            new MatrixBlock(this, $block);\n            this.blockSort.addItems($block);\n            this.blockSelect.addItems($block);\n            this.updateAddBlockBtn();\n\n            Garnish.requestAnimationFrame(() => {\n              if (typeof autofocus === 'undefined' || autofocus) {\n                // Scroll to the block\n                Garnish.scrollContainerToElement($block);\n                // Focus on the first focusable element\n                $block.find('.flex-fields :focusable').first().focus();\n              }\n\n              // Resume the draft editor\n              if (elementEditor) {\n                elementEditor.resume();\n              }\n            });\n          }\n        );\n      },\n\n      getBlockTypeByHandle: function (handle) {\n        for (var i = 0; i < this.blockTypes.length; i++) {\n          if (this.blockTypes[i].handle === handle) {\n            return this.blockTypes[i];\n          }\n        }\n      },\n\n      collapseSelectedBlocks: function () {\n        this.callOnSelectedBlocks('collapse');\n      },\n\n      expandSelectedBlocks: function () {\n        this.callOnSelectedBlocks('expand');\n      },\n\n      disableSelectedBlocks: function () {\n        this.callOnSelectedBlocks('disable');\n      },\n\n      enableSelectedBlocks: function () {\n        this.callOnSelectedBlocks('enable');\n      },\n\n      deleteSelectedBlocks: function () {\n        this.callOnSelectedBlocks('selfDestruct');\n      },\n\n      callOnSelectedBlocks: function (fn) {\n        for (var i = 0; i < this.blockSelect.$selectedItems.length; i++) {\n          this.blockSelect.$selectedItems.eq(i).data('block')[fn]();\n        }\n      },\n\n      getHiddenBlockCss: function ($block) {\n        return {\n          opacity: 0,\n          marginBottom: -$block.outerHeight(),\n        };\n      },\n\n      getParsedBlockHtml: function (html, id) {\n        if (typeof html === 'string') {\n          return html.replace(\n            new RegExp(`__BLOCK_${this.settings.placeholderKey}__`, 'g'),\n            id\n          );\n        } else {\n          return '';\n        }\n      },\n\n      get maxBlocks() {\n        return this.settings.maxBlocks;\n      },\n    },\n    {\n      defaults: {\n        placeholderKey: null,\n        maxBlocks: null,\n        staticBlocks: false,\n      },\n\n      collapsedBlockStorageKey:\n        'Craft-' + Craft.systemUid + '.MatrixInput.collapsedBlocks',\n\n      getCollapsedBlockIds: function () {\n        if (\n          typeof localStorage[Craft.MatrixInput.collapsedBlockStorageKey] ===\n          'string'\n        ) {\n          return Craft.filterArray(\n            localStorage[Craft.MatrixInput.collapsedBlockStorageKey].split(',')\n          );\n        } else {\n          return [];\n        }\n      },\n\n      setCollapsedBlockIds: function (ids) {\n        localStorage[Craft.MatrixInput.collapsedBlockStorageKey] =\n          ids.join(',');\n      },\n\n      rememberCollapsedBlockId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n          if ($.inArray('' + id, collapsedBlocks) === -1) {\n            collapsedBlocks.push(id);\n            Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n          }\n        }\n      },\n\n      forgetCollapsedBlockId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n            collapsedBlocksIndex = $.inArray('' + id, collapsedBlocks);\n\n          if (collapsedBlocksIndex !== -1) {\n            collapsedBlocks.splice(collapsedBlocksIndex, 1);\n            Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n          }\n        }\n      },\n    }\n  );\n\n  var MatrixBlock = Garnish.Base.extend({\n    matrix: null,\n    $container: null,\n    $titlebar: null,\n    $fieldsContainer: null,\n    $previewContainer: null,\n    $actionMenu: null,\n    $collapsedInput: null,\n\n    actionDisclosure: null,\n\n    isNew: null,\n    id: null,\n\n    collapsed: false,\n\n    init: function (matrix, $container) {\n      this.matrix = matrix;\n      this.$container = $container;\n      this.$titlebar = $container.children('.titlebar');\n      this.$previewContainer = this.$titlebar.children('.preview');\n      this.$fieldsContainer = $container.children('.fields');\n\n      this.$container.data('block', this);\n\n      this.id = this.$container.data('id');\n      this.isNew =\n        !this.id ||\n        (typeof this.id === 'string' && this.id.substring(0, 3) === 'new');\n\n      const $actionMenuBtn = this.$container.find(\n        '> .actions [data-disclosure-trigger]'\n      );\n      const actionDisclosure =\n        $actionMenuBtn.data('trigger') ||\n        new Garnish.DisclosureMenu($actionMenuBtn);\n\n      this.$actionMenu = actionDisclosure.$container;\n      this.actionDisclosure = actionDisclosure;\n\n      actionDisclosure.on('show', () => {\n        this.$container.addClass('active');\n        if (this.$container.prev('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .addClass('hidden');\n        }\n        if (this.$container.next('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .addClass('hidden');\n        }\n      });\n\n      actionDisclosure.on('hide', () => {\n        this.$container.removeClass('active');\n      });\n\n      this.$actionMenuOptions = this.$actionMenu.find('a[data-action]');\n\n      this.addListener(\n        this.$actionMenuOptions,\n        'click',\n        this.handleActionClick\n      );\n      this.addListener(\n        this.$actionMenuOptions,\n        'keydown',\n        this.handleActionKeydown\n      );\n\n      // Was this block already collapsed?\n      if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n        this.collapse();\n      }\n\n      this._handleTitleBarClick = function (ev) {\n        ev.preventDefault();\n        this.toggle();\n      };\n\n      this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n    },\n\n    toggle: function () {\n      if (this.collapsed) {\n        this.expand();\n      } else {\n        this.collapse(true);\n      }\n    },\n\n    collapse: function (animate) {\n      if (this.collapsed) {\n        return;\n      }\n\n      this.$container.addClass('collapsed');\n\n      var previewHtml = '',\n        $fields = this.$fieldsContainer.children().children();\n\n      for (var i = 0; i < $fields.length; i++) {\n        var $field = $($fields[i]),\n          $inputs = $field\n            .children('.input')\n            .find('select,input[type!=\"hidden\"],textarea,.label'),\n          inputPreviewText = '';\n\n        for (var j = 0; j < $inputs.length; j++) {\n          var $input = $($inputs[j]),\n            value;\n\n          if ($input.hasClass('label')) {\n            var $maybeLightswitchContainer = $input.parent().parent();\n\n            if (\n              $maybeLightswitchContainer.hasClass('lightswitch') &&\n              (($maybeLightswitchContainer.hasClass('on') &&\n                $input.hasClass('off')) ||\n                (!$maybeLightswitchContainer.hasClass('on') &&\n                  $input.hasClass('on')))\n            ) {\n              continue;\n            }\n\n            value = $input.text();\n          } else {\n            value = Craft.getText(this._inputPreviewText($input));\n          }\n\n          if (Array.isArray(value)) {\n            value = value.join(', ');\n          }\n\n          if (value) {\n            value = Craft.escapeHtml(value).trim();\n\n            if (value) {\n              if (inputPreviewText) {\n                inputPreviewText += ', ';\n              }\n\n              inputPreviewText += value;\n            }\n          }\n        }\n\n        if (inputPreviewText) {\n          previewHtml +=\n            (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n        }\n      }\n\n      this.$previewContainer.html(previewHtml);\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      if (animate && !Garnish.prefersReducedMotion()) {\n        this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n        this.$container.velocity({height: 32}, 'fast');\n      } else {\n        this.$previewContainer.show();\n        this.$fieldsContainer.hide();\n        this.$container.css({height: 32});\n      }\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew) {\n        Craft.MatrixInput.rememberCollapsedBlockId(this.id);\n      } else {\n        if (!this.$collapsedInput) {\n          this.$collapsedInput = $(\n            '<input type=\"hidden\" name=\"' +\n              this.matrix.inputNamePrefix +\n              '[blocks][' +\n              this.id +\n              '][collapsed]\" value=\"1\"/>'\n          ).appendTo(this.$container);\n        } else {\n          this.$collapsedInput.val('1');\n        }\n      }\n\n      this.collapsed = true;\n    },\n\n    _inputPreviewText: function ($input) {\n      if ($input.is('select,multiselect')) {\n        const labels = [];\n        const $options = $input.find('option:selected');\n        for (let k = 0; k < $options.length; k++) {\n          labels.push($options.eq(k).text());\n        }\n        return labels;\n      }\n\n      if (\n        $input.is('input[type=\"checkbox\"]:checked,input[type=\"radio\"]:checked')\n      ) {\n        const id = $input.attr('id');\n        const $label = $(`label[for=\"${id}\"]`);\n        if ($label.length) {\n          return $label.text();\n        }\n      }\n\n      return Garnish.getInputPostVal($input);\n    },\n\n    expand: function () {\n      if (!this.collapsed) {\n        return;\n      }\n\n      this.$container.removeClass('collapsed');\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      var collapsedContainerHeight = this.$container.height();\n      this.$container.height('auto');\n      this.$fieldsContainer.show();\n      var expandedContainerHeight = this.$container.height();\n      var displayValue = this.$fieldsContainer.css('display') || 'block';\n      this.$container.height(collapsedContainerHeight);\n      this.$fieldsContainer\n        .hide()\n        .velocity('fadeIn', {duration: 'fast', display: displayValue});\n\n      const animationDuration = Garnish.prefersReducedMotion() ? 0 : 'fast';\n      this.$container.velocity(\n        {height: expandedContainerHeight},\n        animationDuration,\n        () => {\n          this.$previewContainer.html('');\n          this.$container.height('auto');\n          this.$container.trigger('scroll');\n        }\n      );\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew && typeof Storage !== 'undefined') {\n        var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n          collapsedBlocksIndex = $.inArray('' + this.id, collapsedBlocks);\n\n        if (collapsedBlocksIndex !== -1) {\n          collapsedBlocks.splice(collapsedBlocksIndex, 1);\n          Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n        }\n      }\n\n      if (!this.isNew) {\n        Craft.MatrixInput.forgetCollapsedBlockId(this.id);\n      } else if (this.$collapsedInput) {\n        this.$collapsedInput.val('');\n      }\n\n      this.collapsed = false;\n    },\n\n    disable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n      this.$container.addClass('disabled-entry');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      this.collapse(true);\n    },\n\n    enable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n      this.$container.removeClass('disabled-entry');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n    },\n\n    moveUp: function () {\n      this.matrix.trigger('beforeMoveBlockUp', {\n        block: this,\n      });\n      let $prev = this.$container.prev('.matrixblock');\n      if ($prev.length) {\n        this.$container.insertBefore($prev);\n        this.matrix.blockSelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveBlockUp', {\n        block: this,\n      });\n    },\n\n    moveDown: function () {\n      this.matrix.trigger('beforeMoveBlockDown', {\n        block: this,\n      });\n      let $next = this.$container.next('.matrixblock');\n      if ($next.length) {\n        this.$container.insertAfter($next);\n        this.matrix.blockSelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveBlockDown', {\n        block: this,\n      });\n    },\n\n    handleActionClick: function (event) {\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    handleActionKeydown: function (event) {\n      const keyCode = event.keyCode;\n\n      if (keyCode !== Garnish.SPACE_KEY) return;\n\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    onActionSelect: function (option) {\n      const batchAction =\n          this.matrix.blockSelect.totalSelected > 1 &&\n          this.matrix.blockSelect.isSelected(this.$container),\n        $option = $(option);\n\n      switch ($option.data('action')) {\n        case 'collapse': {\n          if (batchAction) {\n            this.matrix.collapseSelectedBlocks();\n          } else {\n            this.collapse(true);\n          }\n\n          break;\n        }\n\n        case 'expand': {\n          if (batchAction) {\n            this.matrix.expandSelectedBlocks();\n          } else {\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'disable': {\n          if (batchAction) {\n            this.matrix.disableSelectedBlocks();\n          } else {\n            this.disable();\n          }\n\n          break;\n        }\n\n        case 'enable': {\n          if (batchAction) {\n            this.matrix.enableSelectedBlocks();\n          } else {\n            this.enable();\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'moveUp': {\n          this.moveUp();\n          break;\n        }\n\n        case 'moveDown': {\n          this.moveDown();\n          break;\n        }\n\n        case 'add': {\n          var type = $option.data('type');\n          this.matrix.addBlock(type, this.$container);\n          break;\n        }\n\n        case 'delete': {\n          if (batchAction) {\n            if (\n              confirm(\n                Craft.t(\n                  'app',\n                  'Are you sure you want to delete the selected blocks?'\n                )\n              )\n            ) {\n              this.matrix.deleteSelectedBlocks();\n            }\n          } else {\n            this.selfDestruct();\n          }\n\n          break;\n        }\n      }\n\n      this.actionDisclosure.hide();\n    },\n\n    selfDestruct: function () {\n      // Remove any inputs from the form data\n      $('[name]', this.$container).removeAttr('name');\n\n      this.$container.velocity(\n        this.matrix.getHiddenBlockCss(this.$container),\n        'fast',\n        () => {\n          this.$container.remove();\n          this.matrix.updateAddBlockBtn();\n\n          this.matrix.trigger('blockDeleted', {\n            $block: this.$container,\n          });\n        }\n      );\n    },\n  });\n})(jQuery);\n"],"names":["$","Craft","MatrixInput","Garnish","Base","extend","id","blockTypes","blockTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddBlockMenu","addBlockBtnGroupWidth","addBlockBtnContainerWidth","$container","$form","$blockContainer","$addBlockBtnContainer","$addBlockBtnGroup","$addBlockBtnGroupBtns","$statusMessage","blockSort","blockSelect","totalNewBlocks","init","settings","i","this","formatInputId","maxBlocks","setSettings","defaults","closest","children","$addBlockMenuBtn","find","data","setNewBlockBtn","length","blockType","handle","$blocks","collapsedBlocks","getCollapsedBlockIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onDragStop","trigger","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$block","blockId","newMatch","match","parseInt","block","MatrixBlock","inArray","collapse","addListener","ev","type","target","addBlock","menubtn","on","option","updateAddBlockBtn","$doc","ready","bind","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreBlocks","each","removeAttr","$items","eq","$actionMenu","parent","attr","updateStatusMessage","message","empty","t","setTimeout","text","$insertBefore","autofocus","typeName","name","actionMenuId","html","getBlockTypeByHandle","staticBlocks","elementEditor","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedBlockHtml","js","getHiddenBlockCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","focus","resume","collapseSelectedBlocks","callOnSelectedBlocks","expandSelectedBlocks","disableSelectedBlocks","enableSelectedBlocks","deleteSelectedBlocks","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedBlockStorageKey","systemUid","localStorage","filterArray","split","setCollapsedBlockIds","ids","join","rememberCollapsedBlockId","Storage","push","forgetCollapsedBlockId","collapsedBlocksIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","actionDisclosure","isNew","collapsed","substring","$actionMenuBtn","DisclosureMenu","prev","next","$actionMenuOptions","handleActionClick","handleActionKeydown","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","value","$input","$maybeLightswitchContainer","getText","_inputPreviewText","Array","isArray","escapeHtml","trim","prefersReducedMotion","duration","height","show","hide","val","is","labels","$options","k","$label","getInputPostVal","collapsedContainerHeight","expandedContainerHeight","displayValue","display","animationDuration","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","event","onActionSelect","keyCode","SPACE_KEY","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"sourceRoot":""}